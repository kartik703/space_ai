name: Nightly Retrain

on:
  schedule:
    - cron: "5 2 * * *"     # 02:05 UTC daily
  workflow_dispatch: {}

# Avoid overlapping runs (e.g., long retrain then manual dispatch)
concurrency:
  group: nightly-retrain
  cancel-in-progress: false

# Required so the workflow can push back to the repo
permissions:
  contents: write

jobs:
  retrain:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements-train.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install training dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-train.txt

      - name: Run retraining pipeline
        run: |
          set -euxo pipefail
          python -m app.retrain | tee retrain.log

      - name: Save artifacts (logs + models)
        uses: actions/upload-artifact@v4
        with:
          name: retrain-artifacts
          path: |
            retrain.log
            models/*
            data/*.csv
          if-no-files-found: warn

      - name: Commit updated models & data
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # Only add if files exist (avoid failing on missing globs)
          [ -d models ] && git add models/* 2>/dev/null || true
          [ -d data ] && git add data/*.csv 2>/dev/null || true
          git diff --staged --quiet && echo "No changes to commit" || git commit -m "nightly: retrain & update models/data"

      - name: Push changes
        run: |
          git push

      # Optional: ping Railway API to warm it & confirm it's serving new model
      # - name: Smoke test Railway
      #   run: |
      #     curl -fsS https://<your-railway-subdomain>.up.railway.app/forecast || exit 1
